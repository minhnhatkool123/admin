[{"D:\\HOCWEB\\test\\myapp3\\src\\index.js":"1","D:\\HOCWEB\\test\\myapp3\\src\\App.js":"2","D:\\HOCWEB\\test\\myapp3\\src\\reportWebVitals.js":"3","D:\\HOCWEB\\test\\myapp3\\src\\Components\\Navbar.js":"4","D:\\HOCWEB\\test\\myapp3\\src\\Header\\Header.js":"5","D:\\HOCWEB\\test\\myapp3\\src\\Components\\SidebarData.js":"6","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductMain.js":"7","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductAdd.js":"8","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductBody.js":"9","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductItem.js":"10","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductEdit.js":"11","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandDell.js":"12","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandAcer.js":"13","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandAsus.js":"14","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandMacbook.js":"15","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandLenovo.js":"16","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandRazer.js":"17","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandHP.js":"18","D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserMain.js":"19","D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserBody.js":"20","D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserItem.js":"21","D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserAdd.js":"22","D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserEdit.js":"23","D:\\HOCWEB\\test\\myapp3\\src\\PageOrder\\Orders.js":"24","D:\\HOCWEB\\test\\myapp3\\src\\PageOrder\\Order.js":"25","D:\\HOCWEB\\test\\myapp3\\src\\ShowError\\FormError.js":"26","D:\\HOCWEB\\test\\myapp3\\src\\Login\\Login.js":"27","D:\\HOCWEB\\test\\myapp3\\src\\PageHome\\Home.js":"28","D:\\HOCWEB\\test\\myapp3\\src\\formatMoney.js":"29","D:\\HOCWEB\\test\\myapp3\\src\\PageAccount\\PageAccount.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":1380,"mtime":1610019411819,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":2268,"mtime":1624457376102,"results":"35","hashOfConfig":"32"},{"size":1410,"mtime":1624436885221,"results":"36","hashOfConfig":"32"},{"size":851,"mtime":1624457277946,"results":"37","hashOfConfig":"32"},{"size":4527,"mtime":1610043182905,"results":"38","hashOfConfig":"32"},{"size":18963,"mtime":1624477897087,"results":"39","hashOfConfig":"32"},{"size":1545,"mtime":1609837501986,"results":"40","hashOfConfig":"32"},{"size":3080,"mtime":1624477741807,"results":"41","hashOfConfig":"32"},{"size":19786,"mtime":1624478090775,"results":"42","hashOfConfig":"32"},{"size":433,"mtime":1609660884890,"results":"43","hashOfConfig":"32"},{"size":252,"mtime":1609584731608,"results":"44","hashOfConfig":"32"},{"size":329,"mtime":1609661019635,"results":"45","hashOfConfig":"32"},{"size":156,"mtime":1609661260661,"results":"46","hashOfConfig":"32"},{"size":260,"mtime":1609661193588,"results":"47","hashOfConfig":"32"},{"size":266,"mtime":1609661340093,"results":"48","hashOfConfig":"32"},{"size":305,"mtime":1609660939342,"results":"49","hashOfConfig":"32"},{"size":3288,"mtime":1609844585390,"results":"50","hashOfConfig":"32"},{"size":1540,"mtime":1609843071833,"results":"51","hashOfConfig":"32"},{"size":2791,"mtime":1609845141296,"results":"52","hashOfConfig":"32"},{"size":11035,"mtime":1609850044652,"results":"53","hashOfConfig":"32"},{"size":148,"mtime":1609694755437,"results":"54","hashOfConfig":"32"},{"size":4473,"mtime":1616435109385,"results":"55","hashOfConfig":"32"},{"size":4120,"mtime":1610043039687,"results":"56","hashOfConfig":"32"},{"size":194,"mtime":1624453584228,"results":"57","hashOfConfig":"32"},{"size":2018,"mtime":1610046182095,"results":"58","hashOfConfig":"32"},{"size":4576,"mtime":1610044424714,"results":"59","hashOfConfig":"32"},{"size":924,"mtime":1610021373753,"results":"60","hashOfConfig":"32"},{"size":11382,"mtime":1610042650029,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"za72of",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"D:\\HOCWEB\\test\\myapp3\\src\\index.js",[],["130","131"],"D:\\HOCWEB\\test\\myapp3\\src\\App.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\reportWebVitals.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\Components\\Navbar.js",["132","133"],"import React, { useState } from 'react';\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { SidebarData } from './SidebarData';\r\n\r\nfunction Navbar({ addWidthBody }) {\r\n\tconst [type, setType] = useState(\r\n\t\tJSON.parse(localStorage.getItem('infoUser')).type,\r\n\t);\r\n\t// const showSidebar = () => {\r\n\t//     setAddWidthBody(!addWidthBody)\r\n\t// }\r\n\tconst [activeicon, setActiveicon] = useState(() => {\r\n\t\tconst initActiveIcon = localStorage.getItem('icon_active') || 0;\r\n\t\t//console.log(\"ACTIVE ICON\", initActiveIcon);\r\n\t\treturn initActiveIcon;\r\n\t});\r\n\t//const [listactive, setListactive] = useState(SidebarData);\r\n\tconst clickIcon = (index) => {\r\n\t\tsetType(JSON.parse(localStorage.getItem('infoUser')).type);\r\n\t\tconsole.log('TYPDE', type);\r\n\t\tif (index === 1 && type === 1) return;\r\n\r\n\t\tsetActiveicon(index);\r\n\t\tconsole.log('click icon', index);\r\n\t\tlocalStorage.setItem('icon_active', index);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={addWidthBody ? 'l-navbar show' : 'l-navbar'} id='nav-bar'>\r\n\t\t\t<nav className='nav'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className='nav__logo'>\r\n\t\t\t\t\t\t<i className='fab fa-google nav__logo-icon' />\r\n\t\t\t\t\t\t<span className='nav__logo-name'>SATIVA</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='nav__list'>\r\n\t\t\t\t\t\t{SidebarData.map((item, index) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t{index === 1 && type === 1 ? (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.cName + (index == activeicon ? ' active' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tto={item.path}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => clickIcon(index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className={item.icon}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={item.spanName}>{item.title}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\tid={item.id}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\titem.cName + (index == activeicon ? ' active' : '')\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tto={item.path}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => clickIcon(index)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className={item.icon}></i>\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={item.spanName}>{item.title}</span>\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\HOCWEB\\test\\myapp3\\src\\Header\\Header.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\Components\\SidebarData.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductMain.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductAdd.js",["134"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport FormError from '../ShowError/FormError';\r\n\r\nimport { SubBrandDell } from './SubBrandDell';\r\nimport { SubBrandAcer } from './SubBrandAcer';\r\nimport { SubBrandAsus } from './SubBrandAsus';\r\nimport { SubBrandHP } from './SubBrandHP';\r\nimport { SubBrandLenovo } from './SubBrandLenovo';\r\nimport { SubBrandMacbook } from './SubBrandMacbook';\r\nimport { SubBrandRazer } from './SubBrandRazer';\r\n\r\nexport default function ProductAdd({\r\n\taddproductshow,\r\n\tsetAddproductshow,\r\n\tsetInfoproducts,\r\n\tinfoproducts,\r\n}) {\r\n\tconst [diSabled, setDisabled] = useState(true);\r\n\tconst [subBrand, setSubBrand] = useState(SubBrandDell);\r\n\tconst [isInputValid, setIsInputValid] = useState({\r\n\t\tgraphics: false,\r\n\t\tname: false,\r\n\t\tprocessor: false,\r\n\t\tdisplay: false,\r\n\t\tmemory: false,\r\n\t\thardDrive: false,\r\n\t\tports: false,\r\n\t\tprice: false,\r\n\t\tsku: false,\r\n\t\tnamebrand: false,\r\n\t\tstatus: false,\r\n\t\t// warranty: false,\r\n\t\t// namebrand: false,\r\n\t\t// subnamebrand: false,\r\n\t\tdiscount: false,\r\n\t});\r\n\r\n\tconst name = useRef('');\r\n\tconst sku = useRef('');\r\n\tconst brand = useRef('');\r\n\tconst price = useRef('');\r\n\tconst warranty = useRef('');\r\n\tconst discount = useRef('');\r\n\t//const images = useRef(\"\");\r\n\tconst graphics = useRef('');\r\n\tconst processor = useRef('');\r\n\tconst os = useRef('');\r\n\tconst display = useRef('');\r\n\tconst memory = useRef('');\r\n\tconst hardDrive = useRef('');\r\n\tconst color = useRef('');\r\n\tconst weight = useRef('');\r\n\tconst battery = useRef('');\r\n\tconst ports = useRef('');\r\n\tconst subbrand = useRef('');\r\n\tconst status = useRef('');\r\n\r\n\tconst onInputChange = (e) => {\r\n\t\tif (status.current.value === 'on_sale') {\r\n\t\t\tsetDisabled(false);\r\n\t\t} else setDisabled(true);\r\n\t};\r\n\r\n\tconst onSubmit = () => {\r\n\t\tlet gia = +price.current.value;\r\n\t\tlet khuyenmai = +discount.current.value;\r\n\t\tif (gia < khuyenmai) {\r\n\t\t\talert('Price < Discount');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (status.current.value !== 'on_sale') discount.current.value = 0;\r\n\t\t// if (subbrand.current.value === \"\")\r\n\t\t//     subbrand.current.value = \"Latitude\";\r\n\r\n\t\tconst newProduct = {\r\n\t\t\tdetail: {\r\n\t\t\t\tgraphics: graphics.current.value,\r\n\t\t\t\tprocessor: processor.current.value,\r\n\t\t\t\tos: os.current.value,\r\n\t\t\t\tdisplay: display.current.value,\r\n\t\t\t\tmemory: memory.current.value,\r\n\t\t\t\thardDrive: hardDrive.current.value,\r\n\t\t\t\tcolor: color.current.value,\r\n\t\t\t\tweight: weight.current.value,\r\n\t\t\t\tbattery: battery.current.value,\r\n\t\t\t\tports: ports.current.value,\r\n\t\t\t},\r\n\t\t\timages: image,\r\n\t\t\tsku: sku.current.value,\r\n\t\t\tname: name.current.value,\r\n\t\t\tprice: price.current.value,\r\n\t\t\twarranty: warranty.current.value,\r\n\t\t\tbrand: {\r\n\t\t\t\tname: brand.current.value,\r\n\t\t\t\tsubBrand: subbrand.current.value,\r\n\t\t\t},\r\n\t\t\tstatus: status.current.value,\r\n\t\t\tdiscount: discount.current.value,\r\n\t\t};\r\n\r\n\t\taxios\r\n\t\t\t.post('http://localhost:8080/api/product/laptop/add', newProduct)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst newListProduct = [...infoproducts];\r\n\t\t\t\tnewListProduct.push(res.data);\r\n\t\t\t\tsetInfoproducts(newListProduct);\r\n\t\t\t\tsetEmptyAllInput();\r\n\t\t\t\talert('Success');\r\n\t\t\t})\r\n\t\t\t.catch((error) => alert(error));\r\n\t};\r\n\r\n\tconst addproductcontainer = useRef();\r\n\tconst [image, setImage] = useState();\r\n\tconst clickSaveProduct = () => {\r\n\t\tconst result = {\r\n\t\t\tname: false,\r\n\t\t\tprocessor: false,\r\n\t\t\tdisplay: false,\r\n\t\t\tmemory: false,\r\n\t\t\thardDrive: false,\r\n\t\t\tports: false,\r\n\t\t\tgraphics: false,\r\n\t\t\tsku: false,\r\n\t\t\tprice: false,\r\n\t\t\tnamebrand: false,\r\n\t\t\tstatus: false,\r\n\t\t\tdiscount: false,\r\n\t\t};\r\n\t\tif (\r\n\t\t\tname.current.value === '' ||\r\n\t\t\tprocessor.current.value === '' ||\r\n\t\t\tdisplay.current.value === '' ||\r\n\t\t\tmemory.current.value === '' ||\r\n\t\t\thardDrive.current.value === '' ||\r\n\t\t\tports.current.value === '' ||\r\n\t\t\tgraphics.current.value === '' ||\r\n\t\t\tprice.current.value === '' ||\r\n\t\t\tsku.current.value === '' ||\r\n\t\t\tbrand.current.value === '' ||\r\n\t\t\tstatus.current.value === '' ||\r\n\t\t\t(discount.current.value === '' && diSabled === false)\r\n\t\t) {\r\n\t\t\tif (name.current.value === '') {\r\n\t\t\t\tresult.name = true;\r\n\t\t\t}\r\n\t\t\tif (processor.current.value === '') {\r\n\t\t\t\tresult.processor = true;\r\n\t\t\t}\r\n\t\t\tif (display.current.value === '') result.display = true;\r\n\t\t\tif (memory.current.value === '') result.memory = true;\r\n\t\t\tif (memory.current.value === '') result.hardDrive = true;\r\n\t\t\tif (ports.current.value === '') result.ports = true;\r\n\t\t\tif (graphics.current.value === '') result.graphics = true;\r\n\t\t\tif (price.current.value === '') result.price = true;\r\n\t\t\tif (sku.current.value === '') result.sku = true;\r\n\t\t\tif (brand.current.value === '') result.namebrand = true;\r\n\t\t\tif (status.current.value === '') result.status = true;\r\n\t\t\tif (discount.current.value === '' && diSabled === false)\r\n\t\t\t\tresult.discount = true;\r\n\t\t\tconsole.log('RERS', result);\r\n\t\t\tsetIsInputValid(result);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tonSubmit();\r\n\t\t//setAddproductshow(!addproductshow);\r\n\t};\r\n\r\n\tconst onImageChange = (e) => {\r\n\t\tconst form = new FormData();\r\n\t\tform.append('image', e.target.files[0]);\r\n\r\n\t\tconst key = '4c68e9d934f5ff7ea319b60f4bd1271f';\r\n\t\tconst url = `https://api.imgbb.com/1/upload?key=${key}`;\r\n\t\tfetch(url, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: form,\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error('Network response was not ok');\r\n\t\t\t\t}\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\t//console.log(data);\r\n\t\t\t\tsetImage(data.data.url);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\talert('error', error);\r\n\t\t\t});\r\n\t\t//if (event.target.files && event.target.files[0]) {\r\n\t\t// const newProduct = {\r\n\t\t//     ...product,\r\n\t\t//     images: URL.createObjectURL(event.target.files[0]),\r\n\t\t// }\r\n\t\t//setProduct(newProduct);\r\n\t\t//console.log(URL.createObjectURL(event.target.files[0]));\r\n\t\t//setImage(URL.createObjectURL(event.target.files[0]));\r\n\r\n\t\t//}\r\n\t};\r\n\tconst setEmptyAllInput = () => {\r\n\t\tgraphics.current.value =\r\n\t\t\tprocessor.current.value =\r\n\t\t\tos.current.value =\r\n\t\t\tdisplay.current.value =\r\n\t\t\tmemory.current.value =\r\n\t\t\thardDrive.current.value =\r\n\t\t\t\t'';\r\n\t\tcolor.current.value =\r\n\t\t\tweight.current.value =\r\n\t\t\tbattery.current.value =\r\n\t\t\tports.current.value =\r\n\t\t\tstatus.current.value =\r\n\t\t\t\t'';\r\n\t\tsku.current.value =\r\n\t\t\tbrand.current.value =\r\n\t\t\tname.current.value =\r\n\t\t\tprice.current.value =\r\n\t\t\twarranty.current.value =\r\n\t\t\tdiscount.current.value =\r\n\t\t\t\t'';\r\n\t\tsetImage('');\r\n\t};\r\n\r\n\tconst handleClickOut = (e) => {\r\n\t\tif (addproductcontainer.current.contains(e.target)) {\r\n\t\t\t//console.log(e.target);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// outside click\r\n\r\n\t\tsetEmptyAllInput();\r\n\t\tsetIsInputValid(false);\r\n\t\tsetAddproductshow(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('mousedown', handleClickOut);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('mousedown', handleClickOut);\r\n\t\t};\r\n\t}, [addproductshow]);\r\n\r\n\tconst validateInput = (checkingText) => {\r\n\t\tif (checkingText === '') return true;\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleInputValidation = (e) => {\r\n\t\t// console.log(\"E của error\", e.target.value);\r\n\t\tlet value = validateInput(e.target.value);\r\n\t\tsetIsInputValid({ ...isInputValid, [e.target.name]: value });\r\n\t\t//setErrorMessage(errorMessage);\r\n\t};\r\n\r\n\tconst ChangeSelect = () => {\r\n\t\tswitch (brand.current.value) {\r\n\t\t\tcase 'Dell':\r\n\t\t\t\tsetSubBrand(SubBrandDell);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Acer':\r\n\t\t\t\tsetSubBrand(SubBrandAcer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Asus':\r\n\t\t\t\tsetSubBrand(SubBrandAsus);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'HP':\r\n\t\t\t\tsetSubBrand(SubBrandHP);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Lenovo':\r\n\t\t\t\tsetSubBrand(SubBrandLenovo);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Macbook':\r\n\t\t\t\tsetSubBrand(SubBrandMacbook);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Razer':\r\n\t\t\t\tsetSubBrand(SubBrandRazer);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={\r\n\t\t\t\taddproductshow\r\n\t\t\t\t\t? 'add__product__container show__add__product'\r\n\t\t\t\t\t: 'add__product__container'\r\n\t\t\t}\r\n\t\t\tref={addproductcontainer}\r\n\t\t>\r\n\t\t\t<form className='add__product__container__content'>\r\n\t\t\t\t<div className='add__product__container__content__head'>\r\n\t\t\t\t\t<h5>New Product</h5>\r\n\t\t\t\t\t<div className>\r\n\t\t\t\t\t\t<p>Add information and add new product.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='add__product__container__content__body'>\r\n\t\t\t\t\t<div className='add__name__product'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Product Name</label>\r\n\t\t\t\t\t\t<div className='input__name__product'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='test-i-name'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tonChange={(e) => onInputChange(e)}\r\n\t\t\t\t\t\t\t\tref={name}\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.name && (\r\n\t\t\t\t\t\t<FormError id='test-name-error' errorMessage='Not Empty Name' />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Processor</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tid='test-i-processor'\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='processor'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={processor}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.processor && (\r\n\t\t\t\t\t\t<FormError\r\n\t\t\t\t\t\t\tid='test-processor-error'\r\n\t\t\t\t\t\t\terrorMessage='Not Empty Processor'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Display</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tid='test-i-display'\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='display'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={display}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.display && (\r\n\t\t\t\t\t\t<FormError\r\n\t\t\t\t\t\t\tid='test-display-error'\r\n\t\t\t\t\t\t\terrorMessage='Not Empty Display'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Memory</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tid='test-i-memory'\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='memory'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={memory}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.memory && (\r\n\t\t\t\t\t\t<FormError id='test-memory-error' errorMessage='Not Empty Memory' />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Hard Drive</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tid='test-i-harddrive'\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='hardDrive'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={hardDrive}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.hardDrive && (\r\n\t\t\t\t\t\t<FormError\r\n\t\t\t\t\t\t\tid='test-harddrive-error'\r\n\t\t\t\t\t\t\terrorMessage='Not Empty Hard Drive'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Ports</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tid='test-i-port'\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='ports'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={ports}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.ports && (\r\n\t\t\t\t\t\t<FormError id='test-port-error' errorMessage='Not Empty Ports' />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Graphics</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tid='test-i-graphic'\r\n\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='graphics'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={graphics}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.graphics && (\r\n\t\t\t\t\t\t<FormError\r\n\t\t\t\t\t\t\tid='test-graphic-error'\r\n\t\t\t\t\t\t\terrorMessage='Not Empty Graphics'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Color</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='color'\r\n\t\t\t\t\t\t\t\t\t\tref={color}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__discount__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Weight</label>\r\n\t\t\t\t\t\t\t\t<div className='input__discount__price '>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='weight'\r\n\t\t\t\t\t\t\t\t\t\tref={weight}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Battery</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='battery'\r\n\t\t\t\t\t\t\t\t\t\tref={battery}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* {isInputValid.stock && <FormError errorMessage=\"Not Empty Stock\" />} */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__discount__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>OS</label>\r\n\t\t\t\t\t\t\t\t<div className='input__discount__price '>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='os'\r\n\t\t\t\t\t\t\t\t\t\tref={os}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* {isInputValid.sku && <FormError errorMessage=\"Not Empty SKU\" />} */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Regular Price</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid='test-i-price'\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tname='price'\r\n\t\t\t\t\t\t\t\t\t\tref={price}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.price && (\r\n\t\t\t\t\t\t\t\t<FormError\r\n\t\t\t\t\t\t\t\t\tid='test-price-error'\r\n\t\t\t\t\t\t\t\t\terrorMessage='Not Empty Price'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__discount__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>SKU</label>\r\n\t\t\t\t\t\t\t\t<div className='input__discount__price '>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid='test-i-sku'\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='sku'\r\n\t\t\t\t\t\t\t\t\t\tref={sku}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.sku && (\r\n\t\t\t\t\t\t\t\t<FormError id='test-sku-error' errorMessage='Not Empty SKU' />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Brand</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t{/* <input type=\"text\" name=\"brand\" onChange={e => onInputChange(e)} ref={brand} onBlur={handleInputValidation} autoComplete=\"off\" /> */}\r\n\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\tid='test-i-brand'\r\n\t\t\t\t\t\t\t\t\t\tname='namebrand'\r\n\t\t\t\t\t\t\t\t\t\tclassName='select__brand'\r\n\t\t\t\t\t\t\t\t\t\tonChange={ChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\tref={brand}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Dell'>Dell</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='HP'>HP</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Asus'>Asus</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Acer'>Acer</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Lenovo'>Lenovo</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Razer'>Razer</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Macbook'>Macbook</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.namebrand && (\r\n\t\t\t\t\t\t\t\t<FormError\r\n\t\t\t\t\t\t\t\t\tid='test-brand-error'\r\n\t\t\t\t\t\t\t\t\terrorMessage='Not Empty Brand'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Sub Brand</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<select className='select__brand' ref={subbrand}>\r\n\t\t\t\t\t\t\t\t\t\t{subBrand.map((item) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Status Product</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\tid='test-i-status'\r\n\t\t\t\t\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\t\t\t\t\tclassName='select__brand'\r\n\t\t\t\t\t\t\t\t\t\tref={status}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onInputChange(e)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value='incoming'>In Coming</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='in_stock'>In Stock</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='on_sale'>Discount</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.status && (\r\n\t\t\t\t\t\t\t\t<FormError\r\n\t\t\t\t\t\t\t\t\tid='test-status-error'\r\n\t\t\t\t\t\t\t\t\terrorMessage='Not Empty Status'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<label htmlFor='form-lable'>Discount Price</label>\r\n\t\t\t\t\t\t\t<div className='input__discount__price'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tname='discount'\r\n\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => onInputChange(e)}\r\n\t\t\t\t\t\t\t\t\tref={discount}\r\n\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\tdisabled={diSabled ? 'disabled' : ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.discount && !diSabled && (\r\n\t\t\t\t\t\t\t\t<FormError errorMessage='Not Empty Discount' />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Warranty</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='warranty'\r\n\t\t\t\t\t\t\t\tonChange={(e) => onInputChange(e)}\r\n\t\t\t\t\t\t\t\tref={warranty}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='container__image__btn'>\r\n\t\t\t\t\t\t<div className='image__div__container'>\r\n\t\t\t\t\t\t\t<img src={image} id='upload__image' alt='' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='flex__btn__imge__save'>\r\n\t\t\t\t\t\t\t<div className='add__image'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tclassName='test-btn-chooseImage'\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\tid='file'\r\n\t\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\t\tonChange={onImageChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor='file'>Choose Image</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName='save__product__btn'\r\n\t\t\t\t\t\t\t\tid='sub_mit1'\r\n\t\t\t\t\t\t\t\tonClick={clickSaveProduct}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<i className='fas fa-plus' />\r\n\t\t\t\t\t\t\t\t&nbsp;Save Product\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductBody.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductItem.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\ProductEdit.js",["135","136","137"],"import axios from 'axios';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport FormError from '../ShowError/FormError';\r\n\r\nimport { SubBrandDell } from './SubBrandDell';\r\nimport { SubBrandAcer } from './SubBrandAcer';\r\nimport { SubBrandAsus } from './SubBrandAsus';\r\nimport { SubBrandHP } from './SubBrandHP';\r\nimport { SubBrandLenovo } from './SubBrandLenovo';\r\nimport { SubBrandMacbook } from './SubBrandMacbook';\r\nimport { SubBrandRazer } from './SubBrandRazer';\r\n\r\nexport default function ProductEdit({\r\n\teditproductshow,\r\n\tsetEditproductshow,\r\n\tsetInfoproducts,\r\n\tinfoproductedit,\r\n}) {\r\n\tconst [subBrand, setSubBrand] = useState([]);\r\n\tconst [diSabled, setDisabled] = useState(true);\r\n\tconst [isInputValid, setIsInputValid] = useState({\r\n\t\tgraphics: false,\r\n\t\tname: false,\r\n\t\tprocessor: false,\r\n\t\tdisplay: false,\r\n\t\tmemory: false,\r\n\t\thardDrive: false,\r\n\t\tports: false,\r\n\t\tprice: false,\r\n\t\tsku: false,\r\n\t\tnamebrand: false,\r\n\t\tstatus: false,\r\n\t\t// warranty: false,\r\n\t\t// subnamebrand: false,\r\n\t\tdiscount: false,\r\n\t});\r\n\r\n\tconst name = useRef('');\r\n\tconst sku = useRef('');\r\n\tconst brand = useRef('');\r\n\tconst price = useRef('');\r\n\tconst warranty = useRef('');\r\n\tconst discount = useRef('');\r\n\t//const images = useRef(\"\");\r\n\tconst graphics = useRef('');\r\n\tconst processor = useRef('');\r\n\tconst os = useRef('');\r\n\tconst display = useRef('');\r\n\tconst memory = useRef('');\r\n\tconst hardDrive = useRef('');\r\n\tconst color = useRef('');\r\n\tconst weight = useRef('');\r\n\tconst battery = useRef('');\r\n\tconst ports = useRef('');\r\n\tconst subbrand = useRef('');\r\n\tconst status = useRef('');\r\n\r\n\tconst DisableInputDiscount = () => {\r\n\t\tif (status.current.value === 'on_sale') {\r\n\t\t\tsetDisabled(false);\r\n\t\t} else setDisabled(true);\r\n\t};\r\n\tconst hoho = () => {\r\n\t\tsubbrand.current.value = infoproductedit.brand.subBrand;\r\n\t\tChangeSelect();\r\n\t};\r\n\tconst ChangeSelect = () => {\r\n\t\tswitch (brand.current.value) {\r\n\t\t\tcase 'Dell':\r\n\t\t\t\tsetSubBrand(SubBrandDell);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Acer':\r\n\t\t\t\tsetSubBrand(SubBrandAcer);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Asus':\r\n\t\t\t\tsetSubBrand(SubBrandAsus);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'HP':\r\n\t\t\t\tsetSubBrand(SubBrandHP);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Lenovo':\r\n\t\t\t\tsetSubBrand(SubBrandLenovo);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Macbook':\r\n\t\t\t\tsetSubBrand(SubBrandMacbook);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'Razer':\r\n\t\t\t\tsetSubBrand(SubBrandRazer);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst setInforProduct = () => {\r\n\t\t// console.log(infoproductedit);\r\n\t\tname.current.value = infoproductedit.name;\r\n\t\tprocessor.current.value = infoproductedit.detail.processor;\r\n\t\tdisplay.current.value = infoproductedit.detail.display;\r\n\t\tmemory.current.value = infoproductedit.detail.memory;\r\n\t\thardDrive.current.value = infoproductedit.detail.hardDrive;\r\n\t\tports.current.value = infoproductedit.detail.ports;\r\n\t\tgraphics.current.value = infoproductedit.detail.graphics;\r\n\t\tcolor.current.value = infoproductedit.detail.color;\r\n\t\tweight.current.value = infoproductedit.detail.weight;\r\n\t\tbattery.current.value = infoproductedit.detail.battery;\r\n\t\tos.current.value = infoproductedit.detail.os;\r\n\t\tsku.current.value = infoproductedit.sku;\r\n\t\tprice.current.value = infoproductedit.price;\r\n\t\twarranty.current.value = infoproductedit.warranty;\r\n\t\tbrand.current.value = infoproductedit.brand.name;\r\n\t\tsetImage(infoproductedit.images);\r\n\t\tChangeSelect();\r\n\t\tsubbrand.current.value = infoproductedit.brand.subBrand;\r\n\r\n\t\t//console.log(\"SAU GÁN\", brand.current.value);\r\n\t\tstatus.current.value = infoproductedit.status;\r\n\t\tdiscount.current.value = infoproductedit.discount;\r\n\t\tDisableInputDiscount();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(infoproductedit.brand.name);\r\n\t\tsetInforProduct();\r\n\t}, [infoproductedit]);\r\n\r\n\tuseEffect(() => {\r\n\t\thoho();\r\n\t}, [subBrand]);\r\n\r\n\t//const { title, sku, price, stock, branch } = product;\r\n\t// const loadProduct = () => {\r\n\t//     const newProduct = {\r\n\t//         ...infoproductedit,\r\n\t//     }\r\n\t//     //console.log(\"NEW PRO\", newProduct);\r\n\t//     setProduct(newProduct);\r\n\t// }\r\n\t// useEffect(() => {\r\n\t//     loadProduct();\r\n\t// }, [infoproductedit]);\r\n\r\n\tconst onInputChange = (e) => {\r\n\t\tif (status.current.value === 'on_sale') {\r\n\t\t\tsetDisabled(false);\r\n\t\t} else setDisabled(true);\r\n\t};\r\n\r\n\tconst loadAfterEdit = async () => {\r\n\t\tconst result = await axios.get('http://localhost:8080/api/product/laptop/');\r\n\t\tconst newListProduct = [...result.data];\r\n\t\tsetInfoproducts(newListProduct);\r\n\t};\r\n\r\n\tconst onSubmit = () => {\r\n\t\tlet gia = +price.current.value;\r\n\t\tlet km = +discount.current.value;\r\n\t\tif (gia < km) {\r\n\t\t\tconsole.log('GIÁ', price.current.value);\r\n\t\t\tconsole.log('KM', discount.current.value);\r\n\t\t\talert('Price < Discount');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (status.current.value !== 'on_sale') discount.current.value = '0';\r\n\t\tconsole.log(image);\r\n\t\tconst newProduct = {\r\n\t\t\tdetail: {\r\n\t\t\t\tgraphics: graphics.current.value,\r\n\t\t\t\tprocessor: processor.current.value,\r\n\t\t\t\tos: os.current.value,\r\n\t\t\t\tdisplay: display.current.value,\r\n\t\t\t\tmemory: memory.current.value,\r\n\t\t\t\thardDrive: hardDrive.current.value,\r\n\t\t\t\tcolor: color.current.value,\r\n\t\t\t\tweight: weight.current.value,\r\n\t\t\t\tbattery: battery.current.value,\r\n\t\t\t\tports: ports.current.value,\r\n\t\t\t},\r\n\t\t\timages: image,\r\n\t\t\tsku: sku.current.value,\r\n\t\t\tname: name.current.value,\r\n\t\t\tprice: price.current.value,\r\n\t\t\twarranty: warranty.current.value,\r\n\t\t\tbrand: {\r\n\t\t\t\tname: brand.current.value,\r\n\t\t\t\tsubBrand: subbrand.current.value,\r\n\t\t\t},\r\n\t\t\tstatus: status.current.value,\r\n\t\t\tdiscount: discount.current.value,\r\n\t\t};\r\n\t\t//console.log(name.current.value)\r\n\t\taxios\r\n\t\t\t.put(\r\n\t\t\t\t`http://localhost:8080/api/product/laptop/edit/${infoproductedit._id}`,\r\n\t\t\t\tnewProduct,\r\n\t\t\t)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tloadAfterEdit();\r\n\t\t\t})\r\n\t\t\t.catch((error) => alert(error));\r\n\t};\r\n\r\n\tconst [image, setImage] = useState();\r\n\r\n\t// console.log(\"NGOai\", image);\r\n\r\n\tconst addproductcontainer = useRef();\r\n\tconst clickSaveProduct = () => {\r\n\t\tconst result = {\r\n\t\t\tname: false,\r\n\t\t\tprocessor: false,\r\n\t\t\tdisplay: false,\r\n\t\t\tmemory: false,\r\n\t\t\thardDrive: false,\r\n\t\t\tports: false,\r\n\t\t\tgraphics: false,\r\n\t\t\tsku: false,\r\n\t\t\tprice: false,\r\n\t\t\tnamebrand: false,\r\n\t\t\tstatus: false,\r\n\t\t\tdiscount: false,\r\n\t\t};\r\n\t\tif (\r\n\t\t\tname.current.value === '' ||\r\n\t\t\tprocessor.current.value === '' ||\r\n\t\t\tdisplay.current.value === '' ||\r\n\t\t\tmemory.current.value === '' ||\r\n\t\t\thardDrive.current.value === '' ||\r\n\t\t\tports.current.value === '' ||\r\n\t\t\tgraphics.current.value === '' ||\r\n\t\t\tprice.current.value === '' ||\r\n\t\t\tsku.current.value === '' ||\r\n\t\t\tbrand.current.value === '' ||\r\n\t\t\tstatus.current.value === '' ||\r\n\t\t\t(discount.current.value === '' && diSabled === false)\r\n\t\t) {\r\n\t\t\tif (name.current.value === '') {\r\n\t\t\t\tresult.name = true;\r\n\t\t\t}\r\n\t\t\tif (processor.current.value === '') {\r\n\t\t\t\tresult.processor = true;\r\n\t\t\t}\r\n\t\t\tif (display.current.value === '') result.display = true;\r\n\t\t\tif (memory.current.value === '') result.memory = true;\r\n\t\t\tif (memory.current.value === '') result.hardDrive = true;\r\n\t\t\tif (ports.current.value === '') result.ports = true;\r\n\t\t\tif (graphics.current.value === '') result.graphics = true;\r\n\t\t\tif (price.current.value === '') result.price = true;\r\n\t\t\tif (sku.current.value === '') result.sku = true;\r\n\t\t\tif (brand.current.value === '') result.namebrand = true;\r\n\t\t\tif (status.current.value === '') result.status = true;\r\n\t\t\tif (discount.current.value === '' && diSabled === false)\r\n\t\t\t\tresult.discount = true;\r\n\t\t\tconsole.log('RERS', result);\r\n\t\t\tsetIsInputValid(result);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet comfirmEdit = window.confirm('Do you want edit a laptop');\r\n\t\tif (comfirmEdit === true) {\r\n\t\t\tonSubmit();\r\n\t\t\tsetEditproductshow(!editproductshow);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onImageChange = (e) => {\r\n\t\tconst form = new FormData();\r\n\t\tform.append('image', e.target.files[0]);\r\n\r\n\t\tconst key = 'fb47ea35cc2cccf63e71a490e83aa335';\r\n\t\tconst url = `https://api.imgbb.com/1/upload?key=${key}`;\r\n\t\tfetch(url, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: form,\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (!response.ok) {\r\n\t\t\t\t\tthrow new Error('Network response was not ok');\r\n\t\t\t\t}\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => setImage(data.data.url))\r\n\t\t\t.catch(function (error) {\r\n\t\t\t\talert('error', error);\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleClickOut = (e) => {\r\n\t\tif (addproductcontainer.current.contains(e.target)) {\r\n\t\t\t//console.log(e.target);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// outside click\r\n\r\n\t\tsetEditproductshow(false);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('mousedown', handleClickOut);\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener('mousedown', handleClickOut);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst handleInputValidation = (e) => {\r\n\t\t// console.log(\"E của error\", e.target.value);\r\n\t\tlet value = validateInput(e.target.value);\r\n\t\tsetIsInputValid({ ...isInputValid, [e.target.name]: value });\r\n\t\t//setErrorMessage(errorMessage);\r\n\t};\r\n\r\n\tconst validateInput = (checkingText) => {\r\n\t\tif (checkingText === '') return true;\r\n\t\telse {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={\r\n\t\t\t\teditproductshow\r\n\t\t\t\t\t? 'add__product__container show__add__product'\r\n\t\t\t\t\t: 'add__product__container'\r\n\t\t\t}\r\n\t\t\tref={addproductcontainer}\r\n\t\t>\r\n\t\t\t<form className='add__product__container__content'>\r\n\t\t\t\t<div className='add__product__container__content__head'>\r\n\t\t\t\t\t<h5>Edit Product</h5>\r\n\t\t\t\t\t<div className>\r\n\t\t\t\t\t\t<p>Edit information of product.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='add__product__container__content__body'>\r\n\t\t\t\t\t<div className='add__name__product'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Product Name</label>\r\n\t\t\t\t\t\t<div className='input__name__product'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='test-i-name-edit'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tref={name}\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.name && (\r\n\t\t\t\t\t\t<FormError id='bokool' errorMessage='Not Empty Name' />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Processor</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='processor'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={processor}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.processor && (\r\n\t\t\t\t\t\t<FormError errorMessage='Not Empty Processor' />\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Display</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='display'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={display}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.display && (\r\n\t\t\t\t\t\t<FormError errorMessage='Not Empty Display' />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Memory</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='memory'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={memory}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.memory && <FormError errorMessage='Not Empty Memory' />}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Hard Drive</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='hardDrive'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={hardDrive}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.hardDrive && (\r\n\t\t\t\t\t\t<FormError errorMessage='Not Empty Hard Drive' />\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Ports</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={2}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='ports'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={ports}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.ports && <FormError errorMessage='Not Empty Ports' />}\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Graphics</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={1}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='graphics'\r\n\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\tref={graphics}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{isInputValid.graphics && (\r\n\t\t\t\t\t\t<FormError errorMessage='Not Empty Graphics' />\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Color</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='color'\r\n\t\t\t\t\t\t\t\t\t\tref={color}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__discount__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Weight</label>\r\n\t\t\t\t\t\t\t\t<div className='input__discount__price '>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='weight'\r\n\t\t\t\t\t\t\t\t\t\tref={weight}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Battery</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='battery'\r\n\t\t\t\t\t\t\t\t\t\tref={battery}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* {isInputValid.stock && <FormError errorMessage=\"Not Empty Stock\" />} */}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__discount__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>OS</label>\r\n\t\t\t\t\t\t\t\t<div className='input__discount__price '>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='os'\r\n\t\t\t\t\t\t\t\t\t\tref={os}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* {isInputValid.sku && <FormError errorMessage=\"Not Empty SKU\" />} */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Regular Price</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\t\tname='price'\r\n\t\t\t\t\t\t\t\t\t\tref={price}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.price && (\r\n\t\t\t\t\t\t\t\t<FormError errorMessage='Not Empty Price' />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__discount__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>SKU</label>\r\n\t\t\t\t\t\t\t\t<div className='input__discount__price '>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\tname='sku'\r\n\t\t\t\t\t\t\t\t\t\tref={sku}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.sku && <FormError errorMessage='Not Empty SKU' />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Brand</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t{/* <input type=\"text\" name=\"brand\" onChange={e => onInputChange(e)} ref={brand} onBlur={handleInputValidation} autoComplete=\"off\" /> */}\r\n\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\tname='namebrand'\r\n\t\t\t\t\t\t\t\t\t\tclassName='select__brand'\r\n\t\t\t\t\t\t\t\t\t\tonChange={ChangeSelect}\r\n\t\t\t\t\t\t\t\t\t\tref={brand}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Dell'>Dell</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='HP'>HP</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Asus'>Asus</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Acer'>Acer</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Lenovo'>Lenovo</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Macbook'>Lenovo</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='Razer'>Razer</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.namebrand && (\r\n\t\t\t\t\t\t\t\t<FormError errorMessage='Not Empty Brand' />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Sub Brand</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<select className='select__brand' ref={subbrand}>\r\n\t\t\t\t\t\t\t\t\t\t{subBrand.map((item) => {\r\n\t\t\t\t\t\t\t\t\t\t\t//console.log(item.name);\r\n\t\t\t\t\t\t\t\t\t\t\t//console.log(subbrand.current.name);\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t// <> {\r\n\t\t\t\t\t\t\t\t\t\t\t\t//     item.name === subbrand.current.name ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t//         <option key={item.id} value={item.name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t//             {item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t//         </option> : <option key={item.id} value={item.name} >\r\n\t\t\t\t\t\t\t\t\t\t\t\t//             {item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t//         </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }</>\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='price__flex'>\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<div className='add__regular__price'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='form-lable'>Status Product</label>\r\n\t\t\t\t\t\t\t\t<div className='input__regular__price'>\r\n\t\t\t\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\t\t\t\t\tclassName='select__brand'\r\n\t\t\t\t\t\t\t\t\t\tref={status}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => onInputChange(e)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<option value='incoming'>In Coming</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='in_stock'>In Stock</option>\r\n\t\t\t\t\t\t\t\t\t\t<option value='on_sale'>Discount</option>\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.status && (\r\n\t\t\t\t\t\t\t\t<FormError errorMessage='Not Empty Status' />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className='add__error__container'>\r\n\t\t\t\t\t\t\t<label htmlFor='form-lable'>Discount Price</label>\r\n\t\t\t\t\t\t\t<div className='input__discount__price'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tname='discount'\r\n\t\t\t\t\t\t\t\t\tonBlur={handleInputValidation}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => onInputChange(e)}\r\n\t\t\t\t\t\t\t\t\tref={discount}\r\n\t\t\t\t\t\t\t\t\tautoComplete='off'\r\n\t\t\t\t\t\t\t\t\tdisabled={diSabled ? 'disabled' : ''}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{isInputValid.discount && !diSabled && (\r\n\t\t\t\t\t\t\t\t<FormError errorMessage='Not Empty Discount' />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className='add__description'>\r\n\t\t\t\t\t\t<label htmlFor='form-lable'>Warranty</label>\r\n\t\t\t\t\t\t<div className='input__description'>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\trows={4}\r\n\t\t\t\t\t\t\t\tdefaultValue={''}\r\n\t\t\t\t\t\t\t\tname='warranty'\r\n\t\t\t\t\t\t\t\tref={warranty}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='container__image__btn'>\r\n\t\t\t\t\t\t<div className='image__div__container'>\r\n\t\t\t\t\t\t\t<img src={image} alt='' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='flex__btn__imge__save'>\r\n\t\t\t\t\t\t\t<div className='add__image'>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\tid='file1'\r\n\t\t\t\t\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\t\t\t\t\tonChange={onImageChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<label htmlFor='file1'>Choose Image</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='edit-check'>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName='save__product__btn'\r\n\t\t\t\t\t\t\t\t\tid='sub_mit2'\r\n\t\t\t\t\t\t\t\t\tonClick={() => clickSaveProduct()}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i className='fas fa-plus' />\r\n\t\t\t\t\t\t\t\t\t&nbsp;Save Product\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n","D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandDell.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandAcer.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandAsus.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandMacbook.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandLenovo.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandRazer.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageProduct\\SubBrandHP.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserMain.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserBody.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserItem.js",[],["138","139"],"D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserAdd.js",["140"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport axios from 'axios';\r\nimport FormError from '../ShowError/FormError';\r\n\r\nexport default function UserAdd({ addEmployeeShow, setAddEmployeeShow, infoEmployee, setInfoEmployee }) {\r\n    const [isInputValid, setIsInputValid] = useState({\r\n        password: false,\r\n        username: false,\r\n    });\r\n\r\n    const name = useRef(\"\");\r\n    const phone = useRef(\"\");\r\n    const address = useRef(\"\");\r\n    const username = useRef(\"\");\r\n    const password = useRef(\"\");\r\n    const email = useRef(\"\");\r\n    const type = useRef(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const addEmployeeContainer = useRef();\r\n\r\n    const handleClickOutEmployee = e => {\r\n        if (addEmployeeContainer.current.contains(e.target)) {\r\n            //console.log(e.target);\r\n            return;\r\n        }\r\n        // outside click\r\n        setEmptyAllInput();\r\n        setAddEmployeeShow(false);\r\n    };\r\n\r\n    const setEmptyAllInput = () => {\r\n        name.current.value = phone.current.value = address.current.value = username.current.value = password.current.value = email.current.value = \"\"\r\n        setImage(\"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClickOutEmployee);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutEmployee);\r\n        };\r\n    }, [addEmployeeShow]);\r\n\r\n    const onSubmit = () => {\r\n        let loai;\r\n        if (type.current.value === \"1\")\r\n            loai = 1;\r\n        else if (type.current.value === \"2\")\r\n            loai = 2;\r\n\r\n        const newEmployee = {\r\n            name: name.current.value,\r\n            phone: phone.current.value,\r\n            address: address.current.value,\r\n            username: username.current.value,\r\n            password: password.current.value,\r\n            avatar: image,\r\n            email: email.current.value,\r\n            type: loai,\r\n        }\r\n\r\n\r\n        axios.post('http://localhost:8080/api/account/register', newEmployee).then(res => {\r\n            //console.log(newEmployee);\r\n            console.log(res.data);\r\n            const newListEmployee = [...infoEmployee];\r\n            newListEmployee.push(res.data);\r\n            setInfoEmployee(newListEmployee);\r\n\r\n            alert(\"Success\");\r\n            setEmptyAllInput();\r\n            //console(res.data);\r\n        }).catch((error) => alert(error));\r\n    }\r\n\r\n    const clickSaveEmployee = () => {\r\n        const result = {\r\n            password: false,\r\n            username: false,\r\n        }\r\n        //console.log(\"USERNAME\", username.current.value.length);\r\n        if ((username.current.value.length < 5 || username.current.value.length > 16) || (password.current.value.length < 5 || password.current.value.length > 16)) {\r\n            if (username.current.value.length < 5 || username.current.value.length > 16)\r\n                result.username = true;\r\n            if (password.current.value.length < 5 || password.current.value.length > 16)\r\n                result.password = true;\r\n            setIsInputValid(result);\r\n            return;\r\n        }\r\n        onSubmit();\r\n    }\r\n\r\n    const onImageChange = (e) => {\r\n        const form = new FormData();\r\n        form.append('image', e.target.files[0]);\r\n\r\n        const key = 'fb47ea35cc2cccf63e71a490e83aa335';\r\n        const url = `https://api.imgbb.com/1/upload?key=${key}`;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: form,\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                //console.log(data);\r\n                setImage(data.data.url)\r\n            })\r\n            .catch(function (error) {\r\n                alert('error', error);\r\n            });\r\n    }\r\n\r\n    const validateInput = (checkingText) => {\r\n        if (checkingText.length < 16 && checkingText.length > 5)\r\n            return false;\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleInputValidation = (e) => {\r\n        // console.log(\"E của error\", e.target.value);\r\n        let value = validateInput(e.target.value);\r\n        setIsInputValid({ ...isInputValid, [e.target.name]: value });\r\n        //setErrorMessage(errorMessage);\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={addEmployeeShow ? \"add__product__container show__add__product\" : \"add__product__container\"} ref={addEmployeeContainer}>\r\n            <form className=\"add__product__container__content\" >\r\n                <div className=\"add__product__container__content__head\">\r\n                    <h5>New Employee</h5>\r\n                    <div className>\r\n                        <p>Add information and add new employee.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"add__product__container__content__body\">\r\n                    <div className=\"add__name__product\">\r\n                        <label htmlFor=\"form-lable\">\r\n                            Name\r\n                    </label>\r\n                        <div className=\"input__name__product\">\r\n                            <input type=\"text\" name=\"name\" ref={name} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"add__name__product\">\r\n                        <label htmlFor=\"form-lable\">\r\n                            Phone\r\n                    </label>\r\n                        <div className=\"input__name__product\">\r\n                            <input type=\"number\" name=\"phone\" autoComplete=\"off\" ref={phone} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"add__description\">\r\n                        <label htmlFor=\"form-lable\">\r\n                            Email\r\n                    </label>\r\n                        <div className=\"input__description\">\r\n                            <textarea rows={1} defaultValue={\"\"} name=\"email\" ref={email} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"add__description\">\r\n                        <label htmlFor=\"form-lable\">\r\n                            Address\r\n                    </label>\r\n                        <div className=\"input__description\">\r\n                            <textarea rows={1} defaultValue={\"\"} name=\"address\" ref={address} autoComplete=\"off\" />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"add__description\">\r\n                        <label htmlFor=\"form-lable\">\r\n                            Username\r\n                    </label>\r\n                        <div className=\"input__description\">\r\n                            <textarea rows={1} defaultValue={\"\"} name=\"username\" ref={username} autoComplete=\"off\" onBlur={handleInputValidation} />\r\n                        </div>\r\n                    </div>\r\n                    {isInputValid.username && <FormError errorMessage=\"Username must length 5-16 characters\" />}\r\n\r\n\r\n                    <div className=\"add__description\">\r\n                        <label htmlFor=\"form-lable\">\r\n                            Password\r\n                    </label>\r\n                        <div className=\"input__description\">\r\n                            <textarea rows={1} defaultValue={\"\"} name=\"password\" ref={password} autoComplete=\"off\" onBlur={handleInputValidation} />\r\n                        </div>\r\n                    </div>\r\n                    {isInputValid.password && <FormError errorMessage=\"Password must length 5-16 characters\" />}\r\n\r\n                    {/* <div className=\"price__flex\">\r\n                        <div className=\"add__error__container\">\r\n                            <div className=\"add__regular__price\">\r\n                                <label htmlFor=\"form-lable\">\r\n                                    Username\r\n                                </label>\r\n                                <div className=\"input__regular__price\">\r\n                                    <input type=\"text\" name=\"username\" autoComplete=\"off\" ref={username} onBlur={handleInputValidation} />\r\n                                </div>\r\n                            </div>\r\n                            {isInputValid.username && <FormError errorMessage=\"Username must lenght 5-16 character\" />}\r\n                        </div>\r\n\r\n\r\n                        <div className=\"add__error__container\">\r\n                            <div className=\"add__discount__price\">\r\n                                <label htmlFor=\"form-lable\">\r\n                                    Password\r\n                                </label>\r\n                                <div className=\"input__discount__price \">\r\n                                    <input type=\"text\" name=\"password\" autoComplete=\"off\" ref={password} onBlur={handleInputValidation} />\r\n                                </div>\r\n                            </div>\r\n                            {isInputValid.password && <FormError errorMessage=\"Password must lenght 5-16 character\" />}\r\n                        </div>\r\n\r\n                    </div> */}\r\n                    <div className=\"price__flex\">\r\n                        <div className=\"add__error__container\">\r\n                            <div className=\"add__regular__price\">\r\n                                <label htmlFor=\"form-lable\">\r\n                                    Poistion\r\n                            </label>\r\n                                <div className=\"input__regular__price\" >\r\n\r\n                                    <select className=\"select__brand\" ref={type}>\r\n                                        <option value=\"2\">Admin</option>\r\n                                        <option value=\"1\">Employee</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"container__image__btn\">\r\n                        <div className=\"image__div__container__user\">\r\n                            <img src={image} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"flex__btn__imge__save\">\r\n                            <div className=\"add__image\">\r\n                                <input type=\"file\" id=\"file2\" accept=\"image/*\" onChange={onImageChange} />\r\n                                <label htmlFor=\"file2\">Choose Image</label>\r\n                            </div>\r\n                            <div className=\"save__product__btn\" id=\"sub_mit\" onClick={clickSaveEmployee}>\r\n\r\n\r\n                                <i className=\"fas fa-plus\" />&nbsp;Save Employee\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","D:\\HOCWEB\\test\\myapp3\\src\\PageUser\\UserEdit.js",[],["141","142"],"D:\\HOCWEB\\test\\myapp3\\src\\PageOrder\\Orders.js",["143"],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Order from './Order';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport './Orders.css';\r\nexport default function Orders() {\r\n\r\n\r\n    const [itemsearch, setItemsearch] = useState([]);\r\n\r\n    const [selectDate, setSelectDate] = useState(\"\");\r\n\r\n    const [timeToday, setTimeToday] = useState(null);\r\n    const [infoOrder, setInfoOrder] = useState([]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchOrder = async () => {\r\n            try {\r\n                const res = await axios.get(\"http://localhost:8080/api/transaction/\");\r\n                //console.log(res.data);\r\n                setInfoOrder(res.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchOrder();\r\n    }, []);\r\n\r\n    const loadAfterComfirm = async () => {\r\n        const result = await axios.get(\"http://localhost:8080/api/transaction/\");\r\n        const newListOrder = [...result.data];\r\n        setInfoOrder(newListOrder);\r\n    }\r\n\r\n    const clickConfirmOrderMain = (order) => {\r\n        if (order.status === true)\r\n            return;\r\n\r\n        const newOrder = { ...order, status: true };\r\n        //console.log(\"NEW ORDER\", newOrder);\r\n        let result = window.confirm(\"Do you want comfirm\");\r\n        if (result === true) {\r\n            axios.put(`http://localhost:8080/api/transaction/${order._id}`, newOrder).then(res => {\r\n                loadAfterComfirm();\r\n            }).catch((error) => alert(error));\r\n        }\r\n        //console.log(order._id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (timeToday === null)\r\n            setItemsearch(infoOrder);\r\n        else\r\n            setItemsearch(\r\n                infoOrder.filter(order => {\r\n\r\n                    return order.date.includes(selectDate);\r\n                })\r\n            )\r\n\r\n    }, [selectDate, infoOrder])\r\n    const selectDateTime = (date) => {\r\n\r\n        let today = new Date(date);\r\n        let day = today.getDate();\r\n        let month = today.getMonth() + 1;\r\n        let year = today.getFullYear();\r\n        // console.log(\"NGÀY\", day);\r\n        // console.log(\"THÁNG\", month);\r\n        // console.log(\"NĂM\", year);\r\n        let tonghop = day + \"-\" + month + \"-\" + year;\r\n\r\n        console.log(date);\r\n\r\n        //console.log(\"NGÀYTHÁNGNĂM\", tonghop);\r\n        setSelectDate(tonghop);\r\n        setTimeToday(date);\r\n    }\r\n\r\n    return (\r\n        <main id='order__main'>\r\n            <div className=\"flex__container__order\">\r\n                <h1>Orders</h1>\r\n                <DatePicker className=\"position__\" onChange={date => selectDateTime(date)} selected={timeToday} dateFormat=\"dd/MM/yyy\" isClearable placeholderText=\"Select Date\" />\r\n            </div>\r\n            <div className='order__title'>\r\n                <div className='order__top__title'>\r\n                    <div className='order__content'>\r\n                        <span>Mã đơn</span>\r\n                    </div>\r\n                    <div className='order__content'>\r\n                        <span>Ngày mua</span>\r\n                    </div>\r\n                    <div className='order__content'>\r\n                        <span>Số lượng</span>\r\n                    </div>\r\n                    <div className='order__content'>\r\n                        <span>Tổng tiền</span>\r\n                    </div>\r\n                    <div className='order__content'>\r\n                        <span>Tình trạng</span>\r\n                    </div>\r\n                    <div className='order__content'>\r\n                        <span>Nguoi dung</span>\r\n                    </div>\r\n                    <div className='order__content'>\r\n                        <span>Chi tiết</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div className='list__order'>\r\n                {orders.map((order, i) => {\r\n                    return <Order order={order} key={i} index={i} />;\r\n                })}\r\n                \r\n            </div> */}\r\n            <div className='list__order'>\r\n                {itemsearch.length !== 0 && itemsearch.map((order, i) => {\r\n                    return <Order order={order} key={i} index={i} clickConfirm={() => clickConfirmOrderMain(order)} setInfoOrder={setInfoOrder} />\r\n                })}\r\n            </div>\r\n        </main >\r\n    );\r\n}\r\n\r\n\r\n","D:\\HOCWEB\\test\\myapp3\\src\\PageOrder\\Order.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\ShowError\\FormError.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\Login\\Login.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageHome\\Home.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\formatMoney.js",[],"D:\\HOCWEB\\test\\myapp3\\src\\PageAccount\\PageAccount.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":48,"column":33,"nodeType":"150","messageId":"151","endLine":48,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":61,"column":33,"nodeType":"150","messageId":"151","endLine":61,"endColumn":35},{"ruleId":"152","severity":1,"message":"153","line":247,"column":5,"nodeType":"154","endLine":247,"endColumn":21,"suggestions":"155"},{"ruleId":"152","severity":1,"message":"156","line":125,"column":5,"nodeType":"154","endLine":125,"endColumn":22,"suggestions":"157"},{"ruleId":"152","severity":1,"message":"158","line":129,"column":5,"nodeType":"154","endLine":129,"endColumn":15,"suggestions":"159"},{"ruleId":"152","severity":1,"message":"153","line":303,"column":5,"nodeType":"154","endLine":303,"endColumn":7,"suggestions":"160"},{"ruleId":"144","replacedBy":"161"},{"ruleId":"146","replacedBy":"162"},{"ruleId":"152","severity":1,"message":"163","line":42,"column":8,"nodeType":"154","endLine":42,"endColumn":25,"suggestions":"164"},{"ruleId":"144","replacedBy":"165"},{"ruleId":"146","replacedBy":"166"},{"ruleId":"152","severity":1,"message":"167","line":68,"column":8,"nodeType":"154","endLine":68,"endColumn":31,"suggestions":"168"},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOut'. Either include it or remove the dependency array.","ArrayExpression",["171"],"React Hook useEffect has a missing dependency: 'setInforProduct'. Either include it or remove the dependency array.",["172"],"React Hook useEffect has a missing dependency: 'hoho'. Either include it or remove the dependency array.",["173"],["174"],["169"],["170"],"React Hook useEffect has a missing dependency: 'handleClickOutEmployee'. Either include it or remove the dependency array.",["175"],["169"],["170"],"React Hook useEffect has a missing dependency: 'timeToday'. Either include it or remove the dependency array.",["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [addproductshow, handleClickOut]",{"range":"189","text":"190"},"Update the dependencies array to be: [infoproductedit, setInforProduct]",{"range":"191","text":"192"},"Update the dependencies array to be: [hoho, subBrand]",{"range":"193","text":"194"},"Update the dependencies array to be: [handleClickOut]",{"range":"195","text":"196"},"Update the dependencies array to be: [addEmployeeShow, handleClickOutEmployee]",{"range":"197","text":"198"},"Update the dependencies array to be: [selectDate, infoOrder, timeToday]",{"range":"199","text":"200"},[6773,6789],"[addproductshow, handleClickOut]",[3675,3692],"[infoproductedit, setInforProduct]",[3733,3743],"[hoho, subBrand]",[8545,8547],"[handleClickOut]",[1399,1416],"[addEmployeeShow, handleClickOutEmployee]",[1951,1974],"[selectDate, infoOrder, timeToday]"]